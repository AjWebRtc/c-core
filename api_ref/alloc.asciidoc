= PubNub Posix C API Reference

* <<pubnub_alloc,pubnub_alloc>>
* <<pubnub_free,pubnub_free>>

== pubnub_alloc

===== pubnub_t *pubnub_alloc(void)

===== DESCRIPTION
Returns an allocated context. After successful allocation, please 
call pubnub_init() to prepare the context for regular use.

Do not make a context on your own - always get a context pointer
by calling this funciton.

===== METHODS

[width="40%",frame="topbot",options="header,footer"]
|======================
|Parameter | Type | Required | Description
|======================

===== RETURNS
[width="40%",frame="topbot",options="header,footer"]
|======================
| Type | Description
| pubnub_t* | Context pointer on success, NULL on error
|======================

===== BASIC USAGE
```
pubnub_t *ctx = pubnub_alloc();
if (NULL == ctx) {
    puts(“Couldn’t allocate a Pubnub context”);
    return -1;
}
```


===== OTHER EXAMPLES


== pubnub_free

===== int pubnub_free(pubnub_t *pb)

===== DESCRIPTION
Frees a previously allocated context, if it is not in a transaction. 
If a context is in a transaction, first cancel it (call pubnub_cancel()), 
then wait for the context to finish the cancelling.

It's OK to call this function on a context whose transaction is
not over and done, it will just fail, but will not affect the
transaction in any way.

You don't have to free a context when you finish a transaction.
Just start a new one. Free a context if you're done doing Pubnub
transactions for a long time.

===== METHODS

[width="40%",frame="topbot",options="header,footer"]
|======================
|Parameter | Type | Required | Description
| pb | pubnub_t* | Yes | Pointer to a context which to free
|======================

===== RETURNS
[width="40%",frame="topbot",options="header,footer"]
|======================
| Type | Description
| int | 0: OK, context freed; else: error, context untouched
|======================

===== BASIC USAGE
```
pubnub_t *ctx = pubnub_alloc();
if (NULL == ctx) {
    puts(“Couldn’t allocate a Pubnub context”);
    return -1;
}
if (0 == pubnub_free(ctx)){
    puts("Context freed");
}
```


===== OTHER EXAMPLES
