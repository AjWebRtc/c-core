= PubNub Posix C API Reference

* <<pubnub_set_non_blocking_io,pubnub_set_non_blocking_io>>
* <<pubnub_set_blocking_io,pubnub_set_blocking_io>>

== pubnub_set_non_blocking_io

===== DESCRIPTION
Sets the usage of non-blocking I/O for a context. If non-blocking
I/O is supported by a platform, it will be used, unless some other
reason prevents it.

Call this after pubnub_init() on the context.

===== METHODS

[width="40%",frame="topbot",options="header,footer"]
|======================
|Parameter | Type | Required | Description
| p | pubnub_t* | Yes | The Context to set non-blocking I/O  for
|======================

===== RETURNS
[width="40%",frame="topbot",options="header,footer"]
|======================
| Type | Description
| int | OK, otherwise: error, blocking I/O not supported
|======================

===== BASIC USAGE
```
pubnub_t *ctx = pubnub_alloc();
if (NULL == ctx) {
  puts(“Couldn’t allocate a Pubnub context”);
  return -1;
}
if (OK == pubnub_set_non_blocking_io(ctx)) {
  puts("Context set to non blocking");
}
```

===== OTHER EXAMPLES


== pubnub_set_blocking_io

===== DESCRIPTION
Sets the usage of blocking I/O for a context. If blocking
I/O is supported by a platform, it will be used, unless some other
reason prevents it.

Call this after pubnub_init() on the context

===== METHODS

[width="40%",frame="topbot",options="header,footer"]
|======================
|Parameter | Type | Required | Description
| p | pubnub_t* | Yes | The Context to set non-blocking I/O  for
|======================

===== RETURNS
[width="40%",frame="topbot",options="header,footer"]
|======================
| Type | Description
| int | OK, otherwise: error, blocking I/O not supported
|======================

===== BASIC USAGE
```
pubnub_t *ctx = pubnub_alloc();
if (NULL == ctx) {
  puts(“Couldn’t allocate a Pubnub context”);
  return -1;
}
if (OK == pubnub_set_blocking_io(ctx)) {
  puts("Context set to blocking");
}
```


===== OTHER EXAMPLES
